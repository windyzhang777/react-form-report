#usernginx;
#auto detects a good number of processes to run
worker_processes 1;
error_log  /var/log/nginx/error.log warn;

events {
    # Sets the maximum number of simultaneous connections that can be opened by a worker process.
    worker_connections 512;
    # Tells the worker to accept multiple connections at a time
    multi_accept on;
}

http {

    client_header_timeout  61s;
    client_body_timeout 61s;
    keepalive_disable none;
    keepalive_timeout 61s 61s;
    keepalive_requests 5000;
    send_timeout 2m;
    
    # what times to include
    include       /etc/nginx/mime.types;
    # what is the default one
    default_type  application/octet-stream;
    

    # Sets the path, format, and configuration for a buffered log write
    log_format compression '$remote_addr - $remote_user [$time_local] '
        '"$request" $body_bytes_sent "$http_referer" '
        '"$http_user_agent" "$http_x_amzn_trace_id"';
		
	
    server {
        listen 80;
        server_name  _;
        # save logs here
        access_log /var/log/nginx/access.log compression;
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        include /etc/nginx/mime.types;
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        # TODO check if gzip required
        #gzip on;
        #gzip_min_length 1000;
        #gzip_proxied expired no-cache no-store private auth;
        #gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;
		
			# Always serve index.html for any request
			location /esfr  {
                proxy_read_timeout 61;
                proxy_connect_timeout 61;
                proxy_send_timeout 61;
                proxy_socket_keepalive on;
				# Set path				
				try_files $uri $uri/ $uri/esfr /index.html;
			}

            location /esfr/static/ {
            alias /usr/share/nginx/html/static/ ; 
            autoindex off; 
            location ~* \.(?:css(\.map)?|js(\.map)?|js|css|png|jpg|jpeg|ico|json|svg)$ {
                expires 7d; 
            }
        }
        
		# Do not cache sw.js, required for offline-first updates.
        location /sw.js {
            add_header Cache-Control "no-cache";
			proxy_cache_bypass $http_pragma;
			proxy_cache_revalidate on;
			expires off;
            access_log off;
	}


        # Any route containing a file extension (e.g. /devicesfile.js)
        location ~ ^.+\..+$ {
            try_files $uri =404;
        }
    }
}